# -*- coding: utf-8 -*-
"""Semana 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hyWmerDZVwGEgJMrFxVnZlxDOqEzAL7F

**exer. 1**
"""

def funcao(cox):
  d = float(input('Digite um número para d: '))
  x = float(input('Digite um número para x: '))
  z = float(input('Digite um número para z: '))
  cox = ((d**3)+(x**2)+z)/(d*x*z)
  return cox

vai = funcao(cox)
print('\n➢ cox = ', "%.2f" %  vai)

"""exer. 2

"""

import math

a = float(input('Digite um número para A: '))
b = float(input('Digite um número para B: '))
c = float(input('Digite um número para C: '))

def eq1(r1): 
  r1 = (-b+math.sqrt(b**2-4*a*c))/(2*a)
  return r1

def eq2(r2):
  r2 = (a*(x**2))+(b*x)+c
  return r2

vav1 = eq1(r1)
vav2 = eq2(r2)

if vav1 and vav2:
  print('equação 1 = ', "%.2f"% vav1, '\nequação 2 = ', "%.2f"% vav2)
else:
  print('errou, nenhum valor')

"""**exer. 3**"""

#p1 = -12, -11 (x1,y1)
x1 = -12
y1 = -11
x2 = float(input('valor de x2 '))
y2 = float(input('valor de y2 '))
result1 = math.pow((x2-x1),2)
result2 = math.pow((y2-y1),2)
fim = result1+result2
calcula_distancia_euclidiana = math.sqrt(fim)
print(calcula_distancia_euclidiana)

"""**exer. 3 aqui, novo cod**"""

import math

x1 = -12
y1 = -11

def func(calcula_distancia_euclidiana):
  x2 = float(input('valor de x2: '))
  y2 = float(input('valor de y2: '))
  calcula_distancia_euclidiana = math.sqrt(((x2-x1)**2) + ((y2-y1)**2))
  print('\n ->sendo: \nx1 = ', x1, '\ny1 = ', y1)
  return calcula_distancia_euclidiana

vav =  func(calcula_distancia_euclidiana)

if vav:
  print('distancia esclidiana: ' , "%.2f"% vav)
else:
  print('none')

"""**exer. 4**"""

sal = float(input('salário: '))
vendas = float(input('vendas em reais: R$ '))

def func(calculacomissao):
  calculacomissao = sal+(vendas*0.22)
  return calculacomissao

valor = func(calculacomissao)


print('Tiffany Herrera deve receber R$ ', "%.2f"% valor, ' no final do mês')